trigger:
- main

variables:
- group: todo-app-env

stages:

# === Test Backend ===
- stage: test_backend
  displayName: "Test Backend"
  jobs:
    - job: test_backend_job
      displayName: "Run Backend Unit Tests"
      pool:
        name: Default
      steps:
        - script: |
            cd backend
            npm install
            npm test
          displayName: "Install & Test Backend"

# === Test Frontend ===
- stage: test_frontend
  displayName: "Test Frontend"
  dependsOn: test_backend
  jobs:
    - job: test_frontend_job
      displayName: "Run Frontend Unit Tests"
      pool:
        name: Default
      steps:
        - script: |
            cd frontend
            npm install
            npm test -- --watchAll=false
          displayName: "Install & Test Frontend"

# === Build ===
- stage: build
  displayName: "Build Frontend & Backend"
  dependsOn:
    - test_frontend
    - test_backend
  jobs:
    - job: build_job
      displayName: "Build Both Apps"
      pool:
        name: Default
      steps:
        - script: |
            cd frontend
            npm ci
            CI=true npm run build
          displayName: "Install & Build Frontend"

        - script: |
            cd backend
            npm install
            npm run build
          displayName: "Install & Build Backend"

# === SonarCloud ===
- stage: sonarcloud
  displayName: "SonarCloud Analysis"
  dependsOn: build
  condition: or(eq(variables['Build.SourceBranch'], 'refs/heads/main'), startsWith(variables['Build.SourceBranch'], 'refs/pull/'))
  jobs:
    - job: sonarcloud_job
      displayName: "Run Sonar Scanner"
      pool:
        name: Default
      steps:
        - script: |
            sonar-scanner ^
              -Dsonar.projectKey=devsecops3313631_todo-app ^
              -Dsonar.organization=devsecops3313631 ^
              -Dsonar.sources=backend,frontend ^
              -Dsonar.exclusions=**/node_modules/**,**/build/**,**/coverage/**,**/*.test.js ^
              -Dsonar.sourceEncoding=UTF-8 ^
              -Dsonar.host.url=$(SONAR_HOST_URL) ^
              -Dsonar.login=$(SONAR_TOKEN)
          displayName: "Run Sonar Scanner"

# === Trivy Scan ===
- stage: trivy_scan
  displayName: "Security Scan"
  dependsOn: build
  jobs:
    - job: trivy_scan_job
      displayName: "Run Trivy Scan"
      pool:
        name: Default
      steps:
        - script: |
            docker build -t backend-img ./backend
            docker build -t frontend-img ./frontend
            mkdir trivy-reports
            trivy image backend-img > trivy-reports/backend-report.txt
            trivy image frontend-img > trivy-reports/frontend-report.txt
          displayName: "Scan with Trivy"
        - task: PublishBuildArtifacts@1
          inputs:
            pathToPublish: trivy-reports
            artifactName: trivy-reports

# === Docker Push ===
- stage: docker_push
  displayName: "Push Docker Images"
  dependsOn:
    - trivy_scan
    - sonarcloud
  jobs:
    - job: docker_push_job
      displayName: "Push to DockerHub"
      pool:
        name: Default
      steps:
        - script: |
            echo $(DOCKER_PASSWORD) | docker login -u $(DOCKER_USERNAME) --password-stdin
            docker build -t $(DOCKER_USERNAME)/todo-app-backend:latest ./backend
            docker build -t $(DOCKER_USERNAME)/todo-app-frontend:latest ./frontend
            docker push $(DOCKER_USERNAME)/todo-app-backend:latest
            docker push $(DOCKER_USERNAME)/todo-app-frontend:latest
          displayName: "Build and Push Images"

# === Update K8s YAMLs and Push to GitHub ===
- stage: update_k8s_manifests
  displayName: "Update image tags and push to GitHub"
  dependsOn: docker_push
  condition: succeeded()
  jobs:
    - job: update_k8s_yaml_job
      displayName: "Update YAMLs on Windows Agent"
      pool:
        name: Default
      steps:
        - powershell: |
            $version = "v$(Build.BuildId)"
            Write-Host "📝 Updating YAMLs to tag $version"

            # استبدال التاج داخل backend YAML
            (Get-Content "k8s\backend-deployment.yaml") -replace "firas124/todo-app-backend:.*", "firas124/todo-app-backend:$version" | Set-Content "k8s\backend-deployment.yaml"

            # استبدال التاج داخل frontend YAML
            (Get-Content "k8s\frontend-deployment.yaml") -replace "firas124/todo-app-frontend:.*", "firas124/todo-app-frontend:$version" | Set-Content "k8s\frontend-deployment.yaml"

            # إعداد Git
            git config --global user.email "pipeline@yourdomain.com"
            git config --global user.name "Azure DevOps Pipeline"

            git remote set-url origin https://$(GITHUB_TOKEN)@github.com/FirasZouaoui/todo-app.git

            git add k8s
            git commit -m "ci: update image tags to $version"
            git push origin HEAD:main
          displayName: "Update YAMLs and Push to GitHub"

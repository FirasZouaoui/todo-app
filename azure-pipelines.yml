trigger:
  - main

pool:
  vmImage: 'ubuntu-latest'

variables:
  - group: SonorSecrets
  - name: dockerHubUser
    value: $(docker-username)
  - name: dockerHubPass
    value: $(docker-password)

stages:

# 🔍 SonarCloud Analysis (via CLI)
- stage: SonarAnalysis
  displayName: "🔍 SonarCloud Analysis"
  jobs:
    - job: RunSonar
      displayName: "Analyze with SonarScanner CLI"
      steps:
        - checkout: self

        - script: |
            sudo apt-get update
            sudo apt-get install -y unzip openjdk-11-jre
            wget https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-5.0.1.3006-linux.zip
            unzip sonar-scanner-cli-5.0.1.3006-linux.zip
            export PATH=$PATH:$(pwd)/sonar-scanner-5.0.1.3006-linux/bin
            sonar-scanner \
              -Dsonar.projectKey=firaszouaoui_todo-app \
              -Dsonar.organization=firaszouaoui \
              -Dsonar.sources=backend,frontend \
              -Dsonar.exclusions=**/node_modules/**,**/build/**,**/coverage/**,**/*.test.js \
              -Dsonar.host.url=https://sonarcloud.io \
              -Dsonar.login=$SONAR_TOKEN
          displayName: "🔍 Run SonarScanner CLI"

# 🔐 Trivy Security Scan
- stage: SecurityScan
  displayName: "🔐 Trivy Image Scan"
  dependsOn: SonarAnalysis
  jobs:
    - job: TrivyScan
      displayName: "Scan Docker Images"
      steps:
        - checkout: self

        - script: |
            sudo apt-get update
            sudo apt-get install -y wget
            wget https://github.com/aquasecurity/trivy/releases/latest/download/trivy_0.49.1_Linux-64bit.deb
            sudo dpkg -i trivy_0.49.1_Linux-64bit.deb
          displayName: "📦 Install Trivy"

        - script: |
            docker build -t backend-img ./backend
            docker build -t frontend-img ./frontend
          displayName: "🐳 Build Docker Images"

        - script: |
            trivy image backend-img > trivy-backend-report.txt
            trivy image frontend-img > trivy-frontend-report.txt
          displayName: "🧪 Scan Docker Images"

        - task: PublishBuildArtifacts@1
          inputs:
            pathToPublish: 'trivy-backend-report.txt'
            artifactName: 'Trivy_Backend_Report'

        - task: PublishBuildArtifacts@1
          inputs:
            pathToPublish: 'trivy-frontend-report.txt'
            artifactName: 'Trivy_Frontend_Report'

# 🚀 Build & Push Docker Images
- stage: DockerBuildAndPush
  displayName: "🚀 Build & Push Docker Images"
  dependsOn: SecurityScan
  jobs:
    - job: PushImages
      displayName: "Push Docker Images to DockerHub"
      steps:
        - checkout: self

        - task: DockerInstaller@0
          inputs:
            dockerVersion: 'latest'

        - script: |
            echo $(dockerHubPass) | docker login -u $(dockerHubUser) --password-stdin
          displayName: "🔐 Docker Login"

        - script: |
            docker build -t $(dockerHubUser)/todo-app-backend:latest ./backend
            docker build -t $(dockerHubUser)/todo-app-frontend:latest ./frontend
          displayName: "🔨 Build Docker Images"

        - script: |
            docker push $(dockerHubUser)/todo-app-backend:latest
            docker push $(dockerHubUser)/todo-app-frontend:latest
          displayName: "📦 Push Docker Images"

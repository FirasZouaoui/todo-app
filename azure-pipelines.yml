trigger:
- main

variables:
- group: todo-app-env

stages:

- stage: ci
  jobs:
    - job: ci_job
      displayName: "Build & Test"
      pool:
        name: Default
      steps:
        - script: |
            cd frontend
            npm install
            npm test -- --passWithNoTests
            npm run build
            cd ../backend
            npm install
            npm run build
          displayName: "Build Frontend and Backend"

- stage: sonarcloud
  condition: or(eq(variables['Build.SourceBranch'], 'refs/heads/main'), startsWith(variables['Build.SourceBranch'], 'refs/pull/'))
  jobs:
    - job: sonarcloud_job
      displayName: "SonarCloud Analysis"
      pool:
        name: Default
      steps:
        - script: |
            sonar-scanner ^
              -Dsonar.projectKey=devsecops3313631_todo-app ^
              -Dsonar.organization=devsecops3313631 ^
              -Dsonar.sources=backend,frontend ^
              -Dsonar.exclusions=**/node_modules/**,**/build/**,**/coverage/**,**/*.test.js ^
              -Dsonar.sourceEncoding=UTF-8 ^
              -Dsonar.host.url=$(SONAR_HOST_URL) ^
              -Dsonar.login=$(SONAR_TOKEN)
          displayName: "Run Sonar Scanner"

- stage: trivy_scan
  jobs:
    - job: trivy_scan_job
      displayName: "Security Scan"
      pool:
        name: Default
      steps:
        - script: |
            docker build -t backend-img ./backend
            docker build -t frontend-img ./frontend
            mkdir trivy-reports
            trivy image backend-img > trivy-reports/backend-report.txt
            trivy image frontend-img > trivy-reports/frontend-report.txt
          displayName: "Run Trivy Scan"
        - task: PublishBuildArtifacts@1
          inputs:
            pathToPublish: trivy-reports
            artifactName: trivy-reports

- stage: docker_push
  jobs:
    - job: docker_push_job
      displayName: "Docker Push"
      pool:
        name: Default
      steps:
        - script: |
            echo $(DOCKER_PASSWORD) | docker login -u $(DOCKER_USERNAME) --password-stdin
            docker build -t $(DOCKER_USERNAME)/todo-app-backend:latest ./backend
            docker build -t $(DOCKER_USERNAME)/todo-app-frontend:latest ./frontend
            docker push $(DOCKER_USERNAME)/todo-app-backend:latest
            docker push $(DOCKER_USERNAME)/todo-app-frontend:latest
          displayName: "Build and Push Images"

